import express from "express";
import { supabase } from "@/lib/supabase";
import { v4 as uuidv4 } from "uuid";

const router = express.Router();

// üîπ GET /api/orders ‚Äî –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–∞–∫–∞–∑—ã
router.get("/", async (_req, res) => {
  const { data, error } = await supabase.from("orders").select("*");
  if (error) return res.status(500).json({ error: error.message });
  res.json(data);
});

// üîπ GET /api/orders/:id ‚Äî –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –ø–æ ID
router.get("/:id", async (req, res) => {
  const { id } = req.params;
  const { data, error } = await supabase
    .from("orders")
    .select("*")
    .eq("id", id)
    .single();
  if (error) return res.status(404).json({ error: "–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω" });
  res.json(data);
});

// üîπ POST /api/orders ‚Äî —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑
router.post("/", async (req, res) => {
  const { user_id, items, total, status } = req.body;

  const { error } = await supabase.from("orders").insert([
    {
      id: uuidv4(),
      user_id,
      items, // —Ç–∏–ø jsonb: –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å product_id –∏ quantity
      total,
      status: status || "created",
      created_at: new Date().toISOString(),
    },
  ]);

  if (error) return res.status(500).json({ error: error.message });
  res.status(201).json({ message: "–ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω" });
});

// üîπ DELETE /api/orders/:id ‚Äî —É–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑
router.delete("/:id", async (req, res) => {
  const { id } = req.params;
  const { error } = await supabase.from("orders").delete().eq("id", id);
  if (error) return res.status(500).json({ error: error.message });
  res.json({ message: "–ó–∞–∫–∞–∑ —É–¥–∞–ª—ë–Ω" });
});

export default router;
