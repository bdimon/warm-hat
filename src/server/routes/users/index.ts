import express from "express";
import { supabaseService } from "@/lib/supabase"; // –ò—Å–ø–æ–ª—å–∑—É–µ–º supabaseService

const router = express.Router();

// –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ supabaseService –±—ã–ª –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
router.use((_req, res, next) => {
  if (!supabaseService) {
    return res.status(503).json({ error: "Service client (supabaseService) not available. Check server configuration." });
  }
  next();
});
 
// üîπ GET /api/users ‚Äî –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
router.get("/", async (_req, res) => {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º API –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  const { data: { users }, error } = await supabaseService!.auth.admin.listUsers();

  if (error) {
    console.error("Error listing users:", error);
    return res.status(500).json({ error: error.message });
  }
  res.json(users);
});

// üîπ GET /api/users/:id ‚Äî –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
router.get("/:id", async (req, res) => {
  const { id } = req.params;
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º API –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
  const { data: { user }, error } = await supabaseService!.auth.admin.getUserById(id);

  if (error) {
    console.error(`Error fetching user ${id}:`, error);
    // –û—à–∏–±–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–∑-–∑–∞ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ UUID –∏–ª–∏ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
    if (error.message.includes("User not found") || error.status === 404) {
      return res.status(404).json({ error: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω" });
    }
    return res.status(500).json({ error: error.message });
  }
  if (!user) {
    return res.status(404).json({ error: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω" });
  }
  res.json(user);
});

// üîπ DELETE /api/users/:id ‚Äî —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
router.delete("/:id", async (req, res) => {
  const { id } = req.params;
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º API –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const { error } = await supabaseService!.auth.admin.deleteUser(id);

  if (error) {
    console.error(`Error deleting user ${id}:`, error);
    return res.status(500).json({ error: error.message });
  }
  res.json({ message: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—ë–Ω" });
});

export default router;
